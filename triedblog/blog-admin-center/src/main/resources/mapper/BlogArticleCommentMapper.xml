<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.admin.dao.BlogArticleCommentMapper">
  <resultMap id="BaseResultMap" type="cn.admin.entity.BlogArticleComment">
    <id column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="article_id" jdbcType="VARCHAR" property="articleId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="from_id" jdbcType="VARCHAR" property="fromId" />
    <result column="from_name" jdbcType="VARCHAR" property="fromName" />
    <result column="from_head_img" jdbcType="VARCHAR" property="fromHeadImg" />
    <result column="to_id" jdbcType="VARCHAR" property="toId" />
    <result column="to_name" jdbcType="VARCHAR" property="toName" />
    <result column="like_num" jdbcType="BIGINT" property="likeNum" />
    <result column="area_ip" jdbcType="VARCHAR" property="areaIp" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.admin.entity.BlogArticleComment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comment_id, article_id, parent_id, from_id, from_name, from_head_img, to_id, to_name, 
    like_num, area_ip, area, create_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.admin.example.BlogArticleCommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_article_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.admin.example.BlogArticleCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog_article_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_article_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog_article_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.admin.example.BlogArticleCommentExample">
    delete from blog_article_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.admin.entity.BlogArticleComment">
    insert into blog_article_comment (comment_id, article_id, parent_id, 
      from_id, from_name, from_head_img, 
      to_id, to_name, like_num, 
      area_ip, area, create_time, 
      content)
    values (#{commentId,jdbcType=BIGINT}, #{articleId,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{fromId,jdbcType=VARCHAR}, #{fromName,jdbcType=VARCHAR}, #{fromHeadImg,jdbcType=VARCHAR}, 
      #{toId,jdbcType=VARCHAR}, #{toName,jdbcType=VARCHAR}, #{likeNum,jdbcType=BIGINT}, 
      #{areaIp,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.admin.entity.BlogArticleComment">
    insert into blog_article_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="fromId != null">
        from_id,
      </if>
      <if test="fromName != null">
        from_name,
      </if>
      <if test="fromHeadImg != null">
        from_head_img,
      </if>
      <if test="toId != null">
        to_id,
      </if>
      <if test="toName != null">
        to_name,
      </if>
      <if test="likeNum != null">
        like_num,
      </if>
      <if test="areaIp != null">
        area_ip,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="fromId != null">
        #{fromId,jdbcType=VARCHAR},
      </if>
      <if test="fromName != null">
        #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="fromHeadImg != null">
        #{fromHeadImg,jdbcType=VARCHAR},
      </if>
      <if test="toId != null">
        #{toId,jdbcType=VARCHAR},
      </if>
      <if test="toName != null">
        #{toName,jdbcType=VARCHAR},
      </if>
      <if test="likeNum != null">
        #{likeNum,jdbcType=BIGINT},
      </if>
      <if test="areaIp != null">
        #{areaIp,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.admin.example.BlogArticleCommentExample" resultType="java.lang.Long">
    select count(*) from blog_article_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog_article_comment
    <set>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=BIGINT},
      </if>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.fromId != null">
        from_id = #{record.fromId,jdbcType=VARCHAR},
      </if>
      <if test="record.fromName != null">
        from_name = #{record.fromName,jdbcType=VARCHAR},
      </if>
      <if test="record.fromHeadImg != null">
        from_head_img = #{record.fromHeadImg,jdbcType=VARCHAR},
      </if>
      <if test="record.toId != null">
        to_id = #{record.toId,jdbcType=VARCHAR},
      </if>
      <if test="record.toName != null">
        to_name = #{record.toName,jdbcType=VARCHAR},
      </if>
      <if test="record.likeNum != null">
        like_num = #{record.likeNum,jdbcType=BIGINT},
      </if>
      <if test="record.areaIp != null">
        area_ip = #{record.areaIp,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update blog_article_comment
    set comment_id = #{record.commentId,jdbcType=BIGINT},
      article_id = #{record.articleId,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      from_id = #{record.fromId,jdbcType=VARCHAR},
      from_name = #{record.fromName,jdbcType=VARCHAR},
      from_head_img = #{record.fromHeadImg,jdbcType=VARCHAR},
      to_id = #{record.toId,jdbcType=VARCHAR},
      to_name = #{record.toName,jdbcType=VARCHAR},
      like_num = #{record.likeNum,jdbcType=BIGINT},
      area_ip = #{record.areaIp,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog_article_comment
    set comment_id = #{record.commentId,jdbcType=BIGINT},
      article_id = #{record.articleId,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      from_id = #{record.fromId,jdbcType=VARCHAR},
      from_name = #{record.fromName,jdbcType=VARCHAR},
      from_head_img = #{record.fromHeadImg,jdbcType=VARCHAR},
      to_id = #{record.toId,jdbcType=VARCHAR},
      to_name = #{record.toName,jdbcType=VARCHAR},
      like_num = #{record.likeNum,jdbcType=BIGINT},
      area_ip = #{record.areaIp,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.admin.entity.BlogArticleComment">
    update blog_article_comment
    <set>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="fromId != null">
        from_id = #{fromId,jdbcType=VARCHAR},
      </if>
      <if test="fromName != null">
        from_name = #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="fromHeadImg != null">
        from_head_img = #{fromHeadImg,jdbcType=VARCHAR},
      </if>
      <if test="toId != null">
        to_id = #{toId,jdbcType=VARCHAR},
      </if>
      <if test="toName != null">
        to_name = #{toName,jdbcType=VARCHAR},
      </if>
      <if test="likeNum != null">
        like_num = #{likeNum,jdbcType=BIGINT},
      </if>
      <if test="areaIp != null">
        area_ip = #{areaIp,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.admin.entity.BlogArticleComment">
    update blog_article_comment
    set article_id = #{articleId,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      from_id = #{fromId,jdbcType=VARCHAR},
      from_name = #{fromName,jdbcType=VARCHAR},
      from_head_img = #{fromHeadImg,jdbcType=VARCHAR},
      to_id = #{toId,jdbcType=VARCHAR},
      to_name = #{toName,jdbcType=VARCHAR},
      like_num = #{likeNum,jdbcType=BIGINT},
      area_ip = #{areaIp,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.admin.entity.BlogArticleComment">
    update blog_article_comment
    set article_id = #{articleId,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      from_id = #{fromId,jdbcType=VARCHAR},
      from_name = #{fromName,jdbcType=VARCHAR},
      from_head_img = #{fromHeadImg,jdbcType=VARCHAR},
      to_id = #{toId,jdbcType=VARCHAR},
      to_name = #{toName,jdbcType=VARCHAR},
      like_num = #{likeNum,jdbcType=BIGINT},
      area_ip = #{areaIp,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
</mapper>